version: '3.8'

services:
  zoo1:
    image: zookeeper # 镜像
    restart: always # 重启
    container_name: zoo1
    hostname: zoo1
    ports:
      - "2181:2181"
    volumes:
      - "./zooConfig/zoo.cfg:/conf/zoo.cfg" # 配置
      - "/mq/zookeeper1/data:/data"
      - "/mq/zookeeper1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1 # id
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      seckill:

  zoo2:
    image: zookeeper
    restart: always
    container_name: zoo2
    hostname: zoo2
    ports:
      - "2182:2181"
    volumes:
      - "./zooConfig/zoo.cfg:/conf/zoo.cfg"
      - "/mq/zookeeper2/data:/data"
      - "/mq/zookeeper2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      seckill:

  zoo3:
    image: zookeeper
    restart: always
    container_name: zoo3
    hostname: zoo3
    ports:
      - "2183:2181"
    volumes:
      - "./zooConfig/zoo.cfg:/conf/zoo.cfg"
      - "/mq/zookeeper3/data:/data"
      - "/mq/zookeeper3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      seckill:

  kafka1:
    image: wurstmeister/kafka # 镜像
    restart: always
    container_name: kafka1
    hostname: kafka1
    ports:
      - 9092:9092
      - 9999:9999
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.27.5.0:9092 # 暴露在外的地址
      KAFKA_ADVERTISED_HOST_NAME: kafka1 #
      KAFKA_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ADVERTISED_PORT: 9092 # 暴露在外的端口
      KAFKA_BROKER_ID: 0 #
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      JMX_PORT: 9999 # jmx
    volumes:
      - /etc/localtime:/etc/localtime
      - "/mq/kafka1/logs:/kafka"
    links:
      - zoo1
      - zoo2
      - zoo3
    networks:
      seckill:

  kafka2:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka2
    hostname: kafka2
    ports:
      - 9093:9092
      - 9998:9999
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.27.5.0:9093
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_HOST_NAME: kafka2
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      JMX_PORT: 9999
    volumes:
      - /etc/localtime:/etc/localtime
      - "/mq/kafka2/logs:/kafka"
    links:
      - zoo1
      - zoo2
      - zoo3
    networks:
      seckill:

  kafka3:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka3
    hostname: kafka3
    ports:
      - 9094:9092
      - 9997:9999
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.27.5.0:9094
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_HOST_NAME: kafka3
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      JMX_PORT: 9999
    volumes:
      - /etc/localtime:/etc/localtime
      - "/mq/kafka3/logs:/kafka"
    links:
      - zoo1
      - zoo2
      - zoo3
    networks:
      seckill:

  kafka-manager:
    image: hlebalbau/kafka-manager
    restart: always
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - 9000:9000
    links:
      - kafka1
      - kafka2
      - kafka3
      - zoo1
      - zoo2
      - zoo3
    environment:
      ZK_HOSTS: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_BROKERS: kafka1:9092,kafka2:9093,kafka3:9094
      APPLICATION_SECRET: letmein
      KAFKA_MANAGER_AUTH_ENABLED: "true" # 开启验证
      KAFKA_MANAGER_USERNAME: "admin" # 用户名
      KAFKA_MANAGER_PASSWORD: "admin" # 密码
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    networks:
      seckill:

networks:
  seckill:
    external: true